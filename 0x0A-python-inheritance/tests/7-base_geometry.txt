check function  'base_geometry'
----------------

Checking docstring for module:
    >>> _import('7-base_geometry').doc_ != None
    True

Checking docstring for class:
	>>> _import('7-base_geometry').BaseGeometry.doc_ != None
	True

Checking docstring methods:
	>>> modul1 = _import("7-base_geometry").BaseGeometry.area.doc_
	>>> len(modul1) > 1
	True

    >>> modul2 = _import("7-base_geometry").BaseGeometry.integer_validator.doc_
	>>> len(modul1) > 1
	True

Importing class:
	>>> BaseGeometry = _import_('7-base_geometry').BaseGeometry

Checking area failure:
	>>> geom = BaseGeometry()
	>>> geom.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

Check many arguments for area:
	 >>> geom.area(1)
	 Traceback (most recent call last):
         ...
	 TypeError: area() takes 1 positional argument but 2 were given

check for int:

    >>> geom.integer_validator("hello", 0)
    Traceback (most recent call last):
    ...
    ValueError: hello must be greater than 0

    >>> geom.integer_validator("list", [1, 2, 3])
    Traceback (most recent call last):
    ...
    TypeError: list must be an integer

    >>> geom.integer_validator("set", {"hello", "world"})
    Traceback (most recent call last):
    ...
    TypeError: set must be an integer

check no arguments:

    >>> geom.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
